{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/DialogsItemForm/DialogsItemForm.js","Components/Dialogs/Dialogs.js","Containers/DialogsContainer.js"],"names":["module","exports","DialogsItem","props","path","id","className","styles","item","to","name","Message","message","maxLength50","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","React","memo","dialogsItem","dialogsItems","dialogs","map","el","messageItem","isAuth","container","messages","values","sendMessageCreator","compose","connect","state","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,aAAe,8BAA8B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,2B,sFCoBnKC,EAhBK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAG/B,OAEI,yBAAKC,UAAWC,IAAOC,MACnB,6BAEI,kBAAC,IAAD,CAASC,GAAIL,GAAb,IAAqBD,EAAMO,KAA3B,QCHDC,EARC,SAACR,GAGb,OACI,yBAAKG,UAAWC,IAAOK,SAAvB,IAAkCT,EAAMS,QAAxC,M,yCCFFC,EAAcC,YAAU,IAmBbC,cAAU,CAACC,KAAK,qBAAhBD,EAjBS,SAACZ,GACvB,OACE,0BAAMc,SAAUd,EAAMe,cACpB,6BACA,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAASV,GACpBH,KAAO,cACPc,YAAY,uBAGZ,6BACE,6CCyBKC,EA9BCC,IAAMC,MAAK,SAAAxB,GACzB,IAAIyB,EAAczB,EAAM0B,aAAaC,QAAQC,KAAI,SAACC,GAAD,OAC/C,kBAAC,EAAD,CAAatB,KAAMsB,EAAGtB,KAAML,GAAI2B,EAAG3B,QAGjC4B,EAAc9B,EAAM0B,aAAaC,QAAQC,KAAI,SAACC,GAAD,OAC/C,kBAAC,EAAD,CAASpB,QAASoB,EAAGpB,aASvB,OAAKT,EAAM+B,OAGT,yBAAK5B,UAAWC,IAAO4B,WACrB,yBAAK7B,UAAWC,IAAOsB,cAAeD,GAEtC,yBAAKtB,UAAWC,IAAO6B,UACrB,6BAAMH,GACN,kBAAC,EAAD,CAAmBhB,SAdL,SAACoB,GACjBlC,EAAMmC,mBAAmBD,EAAOJ,kBAKV,kBAAC,IAAD,CAAUxB,GAAE,c,kCCZxB8B,sBAAQC,aATF,SAACC,GACnB,MAAO,CACHZ,aAAcY,EAAMZ,gBAOoB,CAACS,yBAAqBI,IAAtDH,CAAwEd","file":"static/js/4.3fa3a6b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__3unFa\",\"dialogsItems\":\"Dialogs_dialogsItems__3zqyj\",\"item\":\"Dialogs_item__1t9fe\",\"messages\":\"Dialogs_messages__1Nwpg\",\"message\":\"Dialogs_message__3buJ7\"};","import styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n\r\n    return (\r\n\r\n        <div className={styles.item}>\r\n            <div>\r\n\r\n                <NavLink to={path}> {props.name} </NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import styles from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={styles.message}> {props.message} </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required,maxLength } from '../../../utils/formHelpersFunctions';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst maxLength50 = maxLength(50)\r\n\r\nconst DialogMessageItem = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field component={Textarea} \r\n        validate={[required,maxLength50]}\r\n        name = \"messageItem\"      \r\n        placeholder=\"Type your message\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button >Send</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  };\r\n  \r\n  export default reduxForm({form:'dialogMessageItem'})(DialogMessageItem)\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport DialogMessageItem from \"./DialogsItemForm/DialogsItemForm.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = React.memo(props => {\r\n  let dialogsItem = props.dialogsItems.dialogs.map((el) => (\r\n    <DialogsItem name={el.name} id={el.id} />\r\n  ));\r\n\r\n  let messageItem = props.dialogsItems.dialogs.map((el) => (\r\n    <Message message={el.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n      props.sendMessageCreator(values.messageItem)\r\n  }\r\n\r\n\r\n\r\n  if (!props.isAuth) return <Redirect to={`/login`} />;\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n      <div className={styles.dialogsItems}>{dialogsItem}</div>\r\n\r\n      <div className={styles.messages}>\r\n        <div>{messageItem}</div>\r\n        <DialogMessageItem onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"../Components/Dialogs/Dialogs\";\r\nimport {sendMessageCreator,} from \"../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsItems: state.dialogsItems,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  compose(connect(mapStateToProps,{sendMessageCreator}),withAuthRedirect)(Dialogs)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//------- старая версия---------------\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     let state = props.store.getState().dialogsItems\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator())\r\n//     }\r\n//\r\n//     let onChangeMessageText = (text) => {\r\n//\r\n//         props.store.dispatch(updateNewMessageCreator(text))\r\n//     }\r\n//\r\n//\r\n//     return <Dialogs onSendMessageClick={onChangeMessageText}\r\n//                     sendMessageCreator={onSendMessageClick}\r\n//                     dialogsItems={state} />\r\n//\r\n//\r\n// };"],"sourceRoot":""}