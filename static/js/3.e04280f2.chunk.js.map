{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Profile/PostSection/PostSection.module.css","Components/Profile/PostSection/Posts/Post.module.css","Components/Profile/ProfileInfo/StatusFieldHooks.js","Components/Profile/ProfileDataForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/PostSection/Posts/Post.js","Components/Profile/PostSection/PostSectionForm.jsx","Components/Profile/PostSection/PostSection.js","Containers/PostSectionContainer.js","Components/Profile/Profile.jsx","Containers/ProfileContainer.js"],"names":["module","exports","StatusFieldHooks","React","memo","props","useState","editMode","setEditMode","status","setStatus","useEffect","deactivationMode","updateUserStatus","onDoubleClick","value","onChange","e","currentTarget","autoFocus","onBlur","onClick","ProfileDataFormContainer","reduxForm","form","handleSubmit","profile","error","onSubmit","className","styles","formOnError","fullName","CreateField","required","Input","type","Textarea","contacts","Object","keys","map","key","ProfileInfo","Preloader","upper_container","upper_container_image","alt","src","avaSection","photos","large","small","avatar","initialValues","formData","saveProfile","then","editProfile","isOwner","target","files","length","updateUserPhoto","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Post","container","post_ava","post_container","message","likeDiv","like","likesCount","maxLength30","maxLength","containerInput","Field","component","name","placeholder","validate","containerButton","PostSection","postsElement","posts","el","id","addPostActionCreator","postItem","PostSectionContainer","connect","state","postsSection","newPostText","Profile","ProfileContainer","userId","this","match","params","authorizedId","history","push","profileUserThunk","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter","withAuthRedirect","auth","isAuth","setUserProfile"],"mappings":"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","file":"static/js/3.e04280f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2S1QA\",\"upper_container_image\":\"Profile_upper_container_image__5BLgj\",\"fullName\":\"Profile_fullName__3GhK9\",\"avaSection\":\"Profile_avaSection__1xI92\",\"aboutMe\":\"Profile_aboutMe__1GD4S\",\"contacts\":\"Profile_contacts__2QgIE\",\"formOnError\":\"Profile_formOnError__1-7Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostSection_container__1dsMW\",\"containerInput\":\"PostSection_containerInput__30rQF\",\"containerButton\":\"PostSection_containerButton__3PXCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_ava\":\"Post_post_ava__3WTEW\",\"like\":\"Post_like__2vjOL\",\"likeDiv\":\"Post_likeDiv__2TSgK\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst StatusFieldHooks = React.memo(props =>  {\r\n\r\n // state = {\r\n //     editMode : false,\r\n //     status:this.props.status\r\n // }\r\n\r\n\r\n let [editMode, setEditMode] = useState (false);\r\n let [status  , setStatus] = useState (props.status);\r\n\r\n useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n const  activationMode = () =>  {\r\n     setEditMode (true)\r\n }\r\n\r\n let deactivationMode =  () => {\r\n     setEditMode(false)\r\n      props.updateUserStatus(status)\r\n\r\n\r\n  }\r\n\r\n  const  onStatusChange =  (e) => {\r\n       setStatus(e.currentTarget.value)\r\n   }\r\n    return (\r\n\r\n           <div>\r\n          <div>\r\n              {!editMode && <div>\r\n                  <span onDoubleClick={activationMode}><b>Status : </b>{props.status || '--------' } </span>\r\n              </div>}\r\n              {editMode && <div>\r\n                  <input value={status}  onChange={onStatusChange} autoFocus={true} onBlur={deactivationMode}  />\r\n                  <button onClick={deactivationMode} value={status}>send</button>\r\n              </div>\r\n              }\r\n          </div>\r\n          </div> \r\n       )\r\n    }\r\n)\r\n\r\nexport default StatusFieldHooks","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport {required} from \"../../utils/formHelpersFunctions\";\r\nimport {CreateField, Input, Textarea} from \"../common/FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst ProfileDataForm =({handleSubmit,profile,error})=>{\r\n\r\n\r\nreturn (\r\n\r\n    <form onSubmit={handleSubmit} >\r\n     <button >save</button>\r\n        <div>\r\n\r\n            {error &&<div> <span  className={styles.formOnError}> {error}</span></div>}\r\n            \r\n            <p className={styles.fullName}>{CreateField(\"Full name\",[required],\"fullName\",Input,)}</p>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:{CreateField(\"looking For A Job\",null,\"lookingForAJob\",Input,{type:\"checkbox\"}) }</b>\r\n        </div>\r\n\r\n        <div>\r\n            <b>Professional skills :{CreateField(\"Skills\",null,\"lookingForAJobDescription\",Textarea) } </b>\r\n        </div>\r\n        <div>\r\n            <b>About me : {CreateField(\"About Me\",null,\"aboutMe\",Textarea) }</b>\r\n        </div>\r\n        <div className={styles.contacts}>\r\n           {Object.keys(profile.contacts).map(key => {\r\n                   return <div className={styles.contacts} key={key}>{key}:{CreateField(key,null,`contacts.${key}`,Input,)} </div> }\r\n               \r\n           )}\r\n        </div>\r\n    </form>\r\n)\r\n}\r\n\r\nconst ProfileDataFormContainer =  reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormContainer\r\n\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../Profile.module.css\";\r\nimport avatar from \"../../../assets/image/avatar.jpg\";\r\nimport StatusFieldHooks from \"./StatusFieldHooks\";\r\nimport Preloader from \"../../../assets/Preloader/Preloader\";\r\nimport ProfileDataForm from \"../ProfileDataForm\";\r\n\r\n// import StatusField from \"../../../Containers/StatusField\";\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  let editProfile = () => {\r\n    setEditMode(true);\r\n  };\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const pickupPhoto = (e) => {\r\n    if (e.target.files.length) {\r\n      props.updateUserPhoto(e.target.files[0]);\r\n    }\r\n  };\r\n \r\n  const onSubmit = (formData) => {\r\n   props.saveProfile(formData).then(()=>{\r\n    setEditMode(false)\r\n   })\r\n   \r\n   \r\n  };\r\n  return (\r\n    <div className={styles.upper_container}>\r\n      <img\r\n        className={styles.upper_container_image}\r\n        alt=\"1\"\r\n        src=\"https://image.shutterstock.com/image-photo/bright-spring-view-cameo-island-260nw-1048185397.jpg\"\r\n      />\r\n\r\n      <div className={styles.avaSection}>\r\n        <img\r\n          alt=\"avatar\"\r\n          src={\r\n            props.profile.photos.large || props.profile.photos.small || avatar\r\n          }\r\n        />\r\n        <div>\r\n          {editMode ? (\r\n            <ProfileDataForm \r\n            initialValues={props.profile}\r\n             profile={props.profile}\r\n              onSubmit={onSubmit} />\r\n          ) : (\r\n            <ProfileData editProfile={editProfile} profile={props.profile} />\r\n          )}\r\n          <div>\r\n            {props.isOwner && <input onChange={pickupPhoto} type=\"file\" />}\r\n          </div>\r\n          <div>\r\n            <StatusFieldHooks\r\n              status={props.status}\r\n              updateUserStatus={props.updateUserStatus}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n      \r\n        {/*<img alt=\"avatar\" src={avatar}/>*/}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProfileInfo;\r\n\r\nconst ProfileData = ({ profile, editProfile }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={editProfile}>edit</button>\r\n      <div>\r\n        <p className={styles.fullName}>{profile.fullName}</p>\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:{profile.lookingForAJob ? \"yes\" : \"no\"}</b>\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>Professional skills : {profile.lookingForAJobDescription}</b>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me : {profile.aboutMe}</b>\r\n      </div>\r\n      <div className={styles.contacts}>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b> : {contactValue}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img\r\n                className={styles.post_ava}\r\n                alt='avatar'\r\n                src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"\r\n            />\r\n            <div className={styles.post_container}>\r\n                {props.message}\r\n                <div className={styles.likeDiv}>\r\n                    <button >-</button>\r\n                    <span>\r\n                        <div className={styles.like}>like</div>\r\n                        {props.likesCount}\r\n                    </span>\r\n                    <button >+</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport styles from './PostSection.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../../utils/formHelpersFunctions';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst maxLength30 = maxLength(30)\r\n\r\nconst PostSectionForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>My posts</div>\r\n            <div className={styles.containerInput}>\r\n                <Field component={Textarea} name=\"postItem\"\r\n                    placeholder='Type your post' validate={[required, maxLength30]} />\r\n            </div>\r\n            <div className={styles.containerButton}>\r\n                <button >Add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default reduxForm({ form: 'postSectionItem' })(PostSectionForm);","import React from 'react';\r\nimport Post from './Posts/Post';\r\nimport styles from './PostSection.module.css'\r\nimport PostSectionForm from './PostSectionForm';\r\n\r\n\r\nconst PostSection = React.memo(props => {\r\n\r\n\r\n    let postsElement = props.posts.map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount}/>)\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPostActionCreator(value.postItem);\r\n    }\r\n\r\n\r\n    // let onPostChange = () => {\r\n\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text)\r\n    //     // props.dispatch(action);\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n\r\n        <div key=\"postElementContainer\" className={styles.container}>\r\n\r\n            <PostSectionForm onSubmit={onAddPost}/>\r\n            {/* <div>My posts</div>\r\n            <div className={styles.containerInput}>\r\n                <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}\r\n                          placeholder='Type your post'/>\r\n            </div>\r\n            <div className={styles.containerButton}>\r\n                <button onClick={onAddPost}>Add</button>\r\n            </div> */}\r\n\r\n\r\n            <div key=\"postElement\">{postsElement}</div>\r\n\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default PostSection;","import PostSection from \"../Components/Profile/PostSection/PostSection\";\r\nimport {addPostActionCreator} from \"../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts : state.postsSection.posts,\r\n        newPostText : state.postsSection.newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PostSectionContainer = connect(mapStateToProps,{addPostActionCreator})(PostSection)\r\n\r\nexport default PostSectionContainer;\r\n\r\n\r\n\r\n//---------------старая версия -----------------------\r\n// const PostSectionContainer = () => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {  store => {\r\n//\r\n//                 let state = store.getState();\r\n//\r\n//                 let addPost = () => {\r\n//\r\n//                     state.dispatch(addPostActionCreator());\r\n//                 }\r\n//\r\n//\r\n//                 let onPostChange = (text) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     state.dispatch(action);\r\n//                 }\r\n//\r\n//                 return <PostSection updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.postsSection}\r\n//                                     newPostText={state.postsSection.newPostText}/>\r\n//\r\n//             }\r\n//         }\r\n//\r\n//         </StoreContext.Consumer>\r\n//     )\r\n//\r\n// }","import React from \"react\";\r\nimport styles from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostSectionContainer from \"../../Containers/PostSectionContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    \r\n\r\n    return (\r\n\r\n        <div className={styles.container}>\r\n            <ProfileInfo saveProfile={props.saveProfile} updateUserPhoto={props.updateUserPhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <PostSectionContainer  />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import * as React from \"react\";\r\nimport Profile from \"../Components/Profile/Profile\";\r\nimport {getUserStatus, profileUserThunk, setUserProfile, updateUserStatus, updateUserPhoto,saveProfile} from \"../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.postsSection.profile,\r\n        status: state.postsSection.status,\r\n        authorizedId : state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId=this.props.authorizedId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.profileUserThunk(this.props.match.params.userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n   componentDidMount() {\r\n\r\n\r\n            this.refreshProfile()\r\n\r\n   }\r\n    componentDidUpdate(prevProps,prevState,snapshot) {\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <Profile {...this.props}\r\n                   isOwner={!this.props.match.params.userId}\r\n                   profile = {this.props.profile}\r\n                   status={this.props.status}\r\n                   saveProfile={this.props.saveProfile}\r\n                   updateUserStatus = {this.props.updateUserStatus} \r\n                   updateUserPhoto = {this.props.updateUserPhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose (withRouter,withAuthRedirect,connect(mapStateToProps,{profileUserThunk,setUserProfile,getUserStatus,updateUserStatus,updateUserPhoto,saveProfile}))(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let userId = this.props.match.params.userId\r\n// if (!userId) {\r\n//     userId = 2\r\n// }\r\n// debugger\r\n// usersAPI.profileUser(userId).then(data => {\r\n//     this.props.setUserProfile(data)\r\n// })\r\n// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(response => {\r\n//\r\n//\r\n//     this.props.setUserProfile(response.data)\r\n//\r\n// })\r\n\r\n\r\n// componentDidMount() {\r\n//     this.props.setToggleStatus(true)\r\n//     axios.get(`https://social-network.samuraijs.com/api/1.0/profile/2`)\r\n//         .then(response => {\r\n//             console.log(response.data)\r\n//\r\n//\r\n//             this.props.setToggleStatus(false)\r\n//\r\n//             this.props.setUserProfile(response.data)\r\n//\r\n//         }\r\n//     )\r\n//\r\n// }\r\n"],"sourceRoot":""}